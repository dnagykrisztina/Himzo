{
	"info": {
		"_postman_id": "e3a5356d-d843-431f-8fd6-44ded8c4fa50",
		"name": "Tests",
		"description": "Tests that are ready to go on azure.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Orders",
			"item": [
				{
					"name": "UserViewsOrder",
					"item": [
						{
							"name": "UserViewsAnOrder",
							"item": [
								{
									"name": "UserViewsAnOrder",
									"item": [
										{
											"name": "UserSignIn",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "50752c70-41e6-4297-a274-566cf373503e",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Email check\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
															"});",
															"pm.test(\"Success\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.success).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{url}}/Auth/Login",
													"host": [
														"{{url}}"
													],
													"path": [
														"Auth",
														"Login"
													]
												},
												"description": "A user signs in."
											},
											"response": []
										},
										{
											"name": "UserViewsAnOrder",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "dbb3a590-b963-443e-a711-ec14e96f7bd1",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Data is valid\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.orderState).to.eql(0);",
															"    pm.expect(jsonData.type).to.eql(0);",
															"    pm.expect(jsonData.amount).to.eql(10);",
															"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
															"    pm.expect(jsonData.fonts).to.eql(\"Arial\");",
															"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
															"    pm.expect(jsonData.orderId).to.eql(7);",
															"    pm.expect(jsonData.orderComment).to.eql(\"Amilyen gyorsan csak lehet!\");",
															"    pm.expect(jsonData.commentContent).to.eql(\"Minta comment #4\");",
															"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
															"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
															"});",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{url}}/Orders/7",
													"host": [
														"{{url}}"
													],
													"path": [
														"Orders",
														"7"
													]
												}
											},
											"response": []
										},
										{
											"name": "Logout",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
														"exec": [
															"pm.test(\"Status code is 200\", function () {",
															"    pm.response.to.have.status(200);",
															"});",
															"",
															"pm.test(\"Success\", function () {",
															"    var jsonData = pm.response.json();",
															"    pm.expect(jsonData.success).to.eql(true);",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{url}}/Auth/Logout",
													"host": [
														"{{url}}"
													],
													"path": [
														"Auth",
														"Logout"
													]
												}
											},
											"response": []
										}
									],
									"protocolProfileBehavior": {},
									"_postman_isSubFolder": true
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserViewsUnownedOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserViewsUnownedOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f2c8f8e4-135a-4fc9-b74f-a5c2cc1e730b",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"The requested order cannot be accessed by this user!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "User tries to view an order that doesn't belong to him.",
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserViewsAllHisOrders",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserViewsAllHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "UserPostsAnOrder",
					"item": [
						{
							"name": "UserPostsInvalidOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPostsInvalidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e14428cf-0b2a-40b4-a065-3bb389f49201",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error processing new order due to unprocessable input!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-10-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User tries to post an invalid order."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "A user tries to post an invalid order.\n\nSteps:\n\t- user signs in\n\t- user navigates to order page\n\t- user posts an invalid order (that somehow passes the frontend)\n\t- user is given an error and sent back to myorders page",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "0bc7dc0d-60a1-4818-b3e4-bcadc15c4904",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "582b18d3-4df3-4827-b77e-5e56697656ee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserPostsAValidOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"New order state is 0 -> Waiting_for_answer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"});",
													"",
													"pm.test(\"OrderTime date equals the same day\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "UserChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "A user posts a valid order.\n\nSteps:\n\t- user signs in\n\t- user navigates to order page\n\t- user post and order\n\t- user is sent back to myorders page",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "2944e495-8c21-4fe6-9ff0-490b71c61dad",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a29f1411-df9a-4242-9797-633a8696e4dd",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"description": "Workflow: user posts a new order.",
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "UserDeletesOrder",
					"item": [
						{
							"name": "UserDeletesAnOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "UserChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});",
													"",
													"pm.test(\"Order to be deleted exists\", function() {",
													"    const body = pm.response.json();",
													"    pm.expect(",
													"    body.filter(function(order) {",
													"        return order.orderId == pm.variables.get(\"order_id\"); ",
													"    }).length > 0);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Deleted order had the expected id\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(pm.variables.get(\"order_id\"));",
													"});",
													"",
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserDeletesNotOwnedOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Body has valid error message\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error deleting order. A user can only delete their own orders.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "User tries to delete an order that doesn't belong to him. The delete attempt fails.",
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "UserUpdatesOrder",
					"item": [
						{
							"name": "UserUpdatesFullOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateFullOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(1);",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(50);",
													"    pm.expect(jsonData.type).to.eql(1);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    pm.expect(jsonData.fonts).to.eql(\"London\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"'A képen szereplő minta túl nagy a megadott mérethez képest!\");",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t\r\n[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  50},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"London\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"1\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"20x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  10},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-10-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Amilyen gyorsan csak lehet!\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Times New Roman\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserUpdatesPartOfOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdatePartOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(1);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(50);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    ",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.fonts).to.eql(\"London\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"    pm.expect(jsonData.type).to.eql(1);",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  50},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"20x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  10},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2025-11-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Amilyen gyorsan csak lehet!\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Arial\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserUpdatesComment",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateComment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a97894f5-7395-4c54-b035-814b84bcafe4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Comment values is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"A rendelésem lehetne mán kész!\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserUpdatesUnownedOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateComment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4edb2da-79b4-4ef4-a6e6-5778586b7520",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"",
													"pm.test(\"Error matches\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error patching order. A user can only patch their own orders.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"A rendelésem lehetne mán kész!\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "UserUpdatesNonValidOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "MemberViewsOrder",
					"item": [
						{
							"name": "MemberViewsAnOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "MemberViewsAnOrder (not owned)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbb3a590-b963-443e-a711-ec14e96f7bd1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Data is valid\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.type).to.eql(0);",
													"    pm.expect(jsonData.amount).to.eql(10);",
													"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
													"    pm.expect(jsonData.fonts).to.eql(\"Arial\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.orderId).to.eql(1);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Amilyen gyorsan csak lehet!\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/7",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"7"
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberViewsAnOrder (owned)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbb3a590-b963-443e-a711-ec14e96f7bd1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Data is valid\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.type).to.eql(0);",
													"    pm.expect(jsonData.amount).to.eql(10);",
													"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
													"    pm.expect(jsonData.fonts).to.eql(\"Webdings\");",
													"    pm.expect(jsonData.patternPlace).to.eql(null);",
													"    pm.expect(jsonData.orderId).to.eql(2);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem érek rá így megcsinálná nekem valaki?\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"Elkészült a pulcsi lehet érte jönni.\");",
													"    pm.expect(jsonData.userName).to.eql(\"Kortag\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"kortag@himzo.hu\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberViewsAllOrders",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "MemberViewsAllOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).to.eql(8);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberViewsAllHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to member\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Kortag\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberSearchesName",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&name=TestUser",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "name",
													"value": "TestUser"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberSearchesEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userEmail\", \"testuser@himzo.hu\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&email=testuser@himzo.hu",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "email",
													"value": "testuser@himzo.hu"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberSearchesDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"orderComment\", \"Amilyen gyorsan csak lehet!\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&search=gyorsan",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "search",
													"value": "gyorsan"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "MemberPostsAnOrder",
					"item": [
						{
							"name": "MemberPostsValidOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "MemberPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"New order state is 0 -> Waiting_for_answer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"});",
													"",
													"pm.test(\"OrderTime date equals the same day\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "MemberChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Kortag\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberPostsInvalidOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "MemberPostsInvalidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e14428cf-0b2a-40b4-a065-3bb389f49201",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error processing new order due to unprocessable input!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-10-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User tries to post an invalid order."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "MemberDeletesOrder",
					"item": [
						{
							"name": "MemberDeletesAnOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "MemberPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "Member requests an order to be sent."
									},
									"response": []
								},
								{
									"name": "MemberChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Kortag\");",
													"    });",
													"});",
													"",
													"pm.test(\"Order to be deleted exists\", function() {",
													"    const body = pm.response.json();",
													"    pm.expect(",
													"    body.filter(function(order) {",
													"        return order.orderId == pm.variables.get(\"order_id\"); ",
													"    }).length > 0);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Deleted order had the expected id\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(pm.variables.get(\"order_id\"));",
													"});",
													"",
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "939a353a-e7ff-41fb-ba4f-4d8cd00f75b3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9322aece-3919-456b-9886-a9dc3b8d0bca",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberDeletesNotOwnedOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "UserChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});",
													"",
													"pm.test(\"Order to be deleted exists\", function() {",
													"    const body = pm.response.json();",
													"    pm.expect(",
													"    body.filter(function(order) {",
													"        return order.orderId == pm.variables.get(\"order_id\"); ",
													"    }).length > 0);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Deleted order is right\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(pm.environment.get(\"order_id\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "Member tries to delete an order that doesn't belong to him. The delete attempt is accepted.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cdb20125-98a5-4483-b39c-e44564270b2e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "84e07749-00dd-4731-be0c-25c94eb0abab",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "MemberUpdatesOrder",
					"item": [
						{
							"name": "MemberUpdatesFullOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateFullOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(2);",
													"    pm.expect(jsonData.commentUpdateTime).to.eql(\"0001-01-01T00:00:00\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(20);",
													"    pm.expect(jsonData.type).to.eql(0);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    pm.expect(jsonData.fonts).to.eql(\"Webdings\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"Kortag\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"kortag@himzo.hu\");",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t\r\n[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  20},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Webdings\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"20x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  10},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-10-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem érek rá így megcsinálná nekem valaki?\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Webdings\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/2",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e1e52c45-04b2-4eaa-b594-7a91c7a072e0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "873d7609-e05c-4692-9c79-1264b62a24c1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberUpdatesPartOfOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdatePartOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(2);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(50);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    ",
													"    pm.expect(jsonData.commentUpdateTime).to.eql(\"0001-01-01T00:00:00\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.fonts).to.eql(\"Webdings\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"Kortag\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"kortag@himzo.hu\");",
													"    pm.expect(jsonData.type).to.eql(0);",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  50},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"20x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  10},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-10-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem érek rá így megcsinálná nekem valaki?\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"London\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/2",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "baf5facb-16d5-4be4-a5b4-9cd92ab998a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "13442a47-a5a7-4869-a43f-14db4112804a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberUpdatesNonValidOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57ed3829-46f9-47ac-bca1-4591039556d9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "36d8ce7b-01ff-4046-87c2-1f53731b7a13",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberUpdatesUnownedOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateUnownedOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4edb2da-79b4-4ef4-a6e6-5778586b7520",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Order belongs to testuser\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"});",
													"",
													"pm.test(\"Sent attributes are not updated\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(3);",
													"    pm.expect(jsonData.amount).to.not.eql(200);",
													"    pm.expect(jsonData.amount).to.eql(1);",
													"    pm.expect(jsonData.size).to.not.eql(\"10x10mm\");",
													"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
													"});",
													"",
													"pm.test(\"Unsent attributes are the same\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.type).to.eql(2);",
													"    pm.expect(jsonData.fonts).to.eql(\"Lato\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"Váll felett\");",
													"    pm.expect(jsonData.orderComment).to.eql(\"Legyen látható helyen\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"A képen szereplő minta túl nagy a megadott mérethez képest!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\", \"value\": 200 },\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\",    \"value\":  \"10x10mm\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/7",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"7"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c433db6e-e571-4014-a124-0e114c2f6d0c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a71ce795-749d-4569-af44-fd04a9500460",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberUpdatesComment",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UpdateComment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a97894f5-7395-4c54-b035-814b84bcafe4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Comment values is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    var today = new Date();",
													"    var commentUpdateTime = new Date(jsonData.commentUpdateTime);",
													"    pm.expect(commentUpdateTime.getDay()).to.eql(today.getDay());",
													"    pm.expect(jsonData.commentContent).to.eql(\"A rendelésed íme kész.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"A rendelésed íme kész.\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ResetCommentUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a97894f5-7395-4c54-b035-814b84bcafe4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Comment values is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    var today = new Date();",
													"    var commentUpdateTime = new Date(jsonData.commentUpdateTime);",
													"    pm.expect(commentUpdateTime.getDay()).to.eql(today.getDay());",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"-\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7d7dce16-8583-47af-b59a-5bad3dd8ff75",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "791f3206-fed7-46d0-9947-b9620f279c50",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AdminViewsOrder",
					"item": [
						{
							"name": "AdminViewsAnOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "AdminViewsAnOrder (not owned)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbb3a590-b963-443e-a711-ec14e96f7bd1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Data is valid\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.type).to.eql(0);",
													"    pm.expect(jsonData.amount).to.eql(10);",
													"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
													"    pm.expect(jsonData.fonts).to.eql(\"Arial\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.orderId).to.eql(1);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Amilyen gyorsan csak lehet!\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/7",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"7"
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminViewsAnOrder (owned)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dbb3a590-b963-443e-a711-ec14e96f7bd1",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Data is valid\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.type).to.eql(1);",
													"    pm.expect(jsonData.amount).to.eql(1);",
													"    pm.expect(jsonData.size).to.eql(\"10x10mm\");",
													"    pm.expect(jsonData.fonts).to.eql(\"Minta font\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"Szívhez\");",
													"    pm.expect(jsonData.orderId).to.eql(8);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Minta megrendelés (Pulcsi)\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"Minta comment #3\");",
													"    pm.expect(jsonData.userName).to.eql(\"Adminisztrátor\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"admin@himzo.hu\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/6",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"6"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d7cae842-6657-4c88-93f4-3d8b492b9d83",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b1959a87-6f66-40c1-a0df-ad12730c247c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminViewsAllOrders",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "AdminViewsAllOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).to.eql(8);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminViewsAllHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to member\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Adminisztrátor\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminSearchesName",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&name=TestUser",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "name",
													"value": "TestUser"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminSearchesEmail",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userEmail\", \"testuser@himzo.hu\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&email=testuser@himzo.hu",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "email",
													"value": "testuser@himzo.hu"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminSearchesDescription",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "63df4838-5b91-4bac-97b3-2eb80e90cfc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order listed\", function() {",
													"    const body = pm.response.json();",
													"    var i = 0;",
													"    body.forEach(function(order) {",
													"        i++;",
													"    });",
													"    pm.expect(i).not.to.eql(8);",
													"});",
													"",
													"pm.test(\"Every order belongs to testuser\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"orderComment\", \"Amilyen gyorsan csak lehet!\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders?all=true&search=gyorsan",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											],
											"query": [
												{
													"key": "all",
													"value": "true"
												},
												{
													"key": "search",
													"value": "gyorsan"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d21a028e-7774-458d-92dd-74c7adc669d6",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "32436b69-752c-4603-9bda-9ed9fe6ffc7c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AdminPostsAnOrder",
					"item": [
						{
							"name": "MemberPostsValidOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "AdminPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"New order state is 0 -> Waiting_for_answer\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"});",
													"",
													"pm.test(\"OrderTime date equals the same day\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "AdminChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Adminisztrátor\");",
													"    });",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "MemberPostsInvalidOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "MemberPostsInvalidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e14428cf-0b2a-40b4-a065-3bb389f49201",
												"exec": [
													"pm.test(\"Status code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													"pm.test(\"Body matches string\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error processing new order due to unprocessable input!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-10-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User tries to post an invalid order."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AdminDeletesOrder",
					"item": [
						{
							"name": "AdminDeletesAnOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "AdminPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "Member requests an order to be sent."
									},
									"response": []
								},
								{
									"name": "AdminChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"Adminisztrátor\");",
													"    });",
													"});",
													"",
													"pm.test(\"Order to be deleted exists\", function() {",
													"    const body = pm.response.json();",
													"    pm.expect(",
													"    body.filter(function(order) {",
													"        return order.orderId == pm.variables.get(\"order_id\"); ",
													"    }).length > 0);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Deleted order had the expected id\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(pm.variables.get(\"order_id\"));",
													"});",
													"",
													"pm.environment.unset(\"order_id\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "939a353a-e7ff-41fb-ba4f-4d8cd00f75b3",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "9322aece-3919-456b-9886-a9dc3b8d0bca",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminDeletesNotOwnedOrder",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPostsValidOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dcc3f5a4-07f8-456b-b282-7293990881d7",
												"exec": [
													"pm.environment.set(\"order_id\", pm.response.json().orderId);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Size\": \"6 cm\",\n    \"Amount\": 10,\n    \"Deadline\": \"2019-12-20\",\n    \"OrderTime\": \"2019-10-13\",\n    \"Type\": 1,\n    \"OrderComment\": \"Ha kell még valami info, akkor szóljatok!\",\n    \"Fonts\": \"Arial\",\n    \"PatternPlace\": \"Szív fölé\",\n    \"Pattern\": \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										},
										"description": "User request an order to be sent."
									},
									"response": []
								},
								{
									"name": "UserChecksHisOrders",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "479e9cd4-930d-41ee-9afe-038bcdf5aecd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Order list is not empty\", function () {",
													"    pm.expect(pm.response.responseSize > 0)",
													"});",
													"",
													"pm.test(\"Every order belongs to kortag\", function() {",
													"    const body = pm.response.json();",
													"    body.forEach(function(order) {",
													"        pm.expect(order).to.have.property(\"userName\", \"TestUser\");",
													"    });",
													"});",
													"",
													"pm.test(\"Order to be deleted exists\", function() {",
													"    const body = pm.response.json();",
													"    pm.expect(",
													"    body.filter(function(order) {",
													"        return order.orderId == pm.variables.get(\"order_id\"); ",
													"    }).length > 0);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "DeletePostesOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8f19e112-bfea-4def-8737-93192ec8f459",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Deleted order is right\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(pm.environment.get(\"order_id\"));",
													"",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Orders/{{order_id}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"{{order_id}}"
											]
										},
										"description": "This is request so the db can remain idempotent."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"description": "Admin tries to delete an order that doesn't belong to him. The delete attempt is accepted.",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "cdb20125-98a5-4483-b39c-e44564270b2e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "84e07749-00dd-4731-be0c-25c94eb0abab",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "AdminUpdatesOrder",
					"item": [
						{
							"name": "AdminUpdatesFullOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "UpdateFullOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(8);",
													"    pm.expect(jsonData.commentContent).to.eql(\"Minta comment #3\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(20);",
													"    pm.expect(jsonData.type).to.eql(0);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    pm.expect(jsonData.fonts).to.eql(\"London\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"-\");",
													"    pm.expect(jsonData.userName).to.eql(\"Adminisztrátor\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"admin@himzo.hu\");",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var comment = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(comment.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(comment.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(comment.getDay());",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\t\r\n[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  20},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"London\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  \"0\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"-\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/6",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"6"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"10x10mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  1},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-10-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Minta megrendelés (Pulcsi)\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Minta font\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  1},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"Szívhez\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "e1e52c45-04b2-4eaa-b594-7a91c7a072e0",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "873d7609-e05c-4692-9c79-1264b62a24c1",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminUpdatesPartOfOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "UpdatePartOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b7d8c610-83d3-47a8-999c-c9e0017a193e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Update body is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(8);",
													"    pm.expect(jsonData.size).to.eql(\"30x30mm\");",
													"    pm.expect(jsonData.amount).to.eql(50);",
													"    pm.expect(jsonData.orderComment).to.eql(\"Nem gond ha késik kicsit.\");",
													"    ",
													"    pm.expect(jsonData.commentContent).to.eql(\"Minta comment #3\");",
													"    pm.expect(jsonData.orderState).to.eql(0);",
													"    pm.expect(jsonData.fonts).to.eql(\"Minta font\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"Szívhez\");",
													"    pm.expect(jsonData.userName).to.eql(\"Adminisztrátor\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"admin@himzo.hu\");",
													"    pm.expect(jsonData.type).to.eql(0);",
													"});",
													"",
													"",
													"pm.test(\"Comment time is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var now = new Date(\"0001-01-01T00:00:00\");",
													"     pm.expect(orderDate.getYear()).to.eql(now.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(now.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(now.getDay());",
													"    ",
													"});",
													"",
													"pm.test(\"Updated orderTime is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var orderDate = new Date(jsonData.orderTime);",
													"    var comment = new Date();",
													"    ",
													"    pm.expect(orderDate.getYear()).to.eql(comment.getYear());",
													"    pm.expect(orderDate.getMonth()).to.eql(comment.getMonth());",
													"    pm.expect(orderDate.getDay()).to.eql(comment.getDay());",
													"});",
													"",
													"pm.test(\"Updated deadline is of expected value\", function () {",
													"    var jsonData = pm.response.json();",
													"    var deadline = new Date(jsonData.deadline);",
													"    var expectedDeadline = new Date(\"2019-12-30T00:00:00\");",
													"    ",
													"    pm.expect(deadline.getYear()).to.eql(expectedDeadline.getYear());",
													"    pm.expect(deadline.getMonth()).to.eql(expectedDeadline.getMonth());",
													"    pm.expect(deadline.getDay()).to.eql(expectedDeadline.getDay());",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json-patch+json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"30x30mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  50},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-12-30\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Nem gond ha késik kicsit.\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2017-11-10\"}\r\n]\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/6",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"6"
											]
										},
										"description": "Patch test for the OrderController"
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\", \"value\": \"10x10mm\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\",    \"value\":  1},\r\n\t{ \"op\": \"replace\", \"path\": \"/Deadline\",    \"value\":  \"2019-10-25\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderComment\",    \"value\":  \"Minta megrendelés (Pulcsi)\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/OrderTime\",    \"value\":  \"2019-09-25\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Fonts\",    \"value\":  \"Minta font\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Type\",    \"value\":  1},\r\n\t{ \"op\": \"replace\", \"path\": \"/PatternPlace\",    \"value\":  \"Szívhez\"},\r\n\t{ \"op\": \"replace\", \"path\": \"/Pattern\",    \"value\":  \"iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAADeklEQVR42l1TbWxTVRh+Tm9717vurps46ZaWTUk7RNmHH1SzoBDFBX8soaHbglHjQiAxGgYREBd/AJkz/pBq/KOJ4C+2AVZTQki2mRl+oBL5ENG4LgNNyz467tbudvfentt7j2dNIOJJnuTknPe853ne530J/reamsPd4Y1rOvz+mi1er1tmzEYuq6mp9Pz4r1fmEr9dvzT033hybxMKNQeaNgRir+18PmIUnMjlKLJZo3TnrRRRUQG43RoGh2/Eb/6R6U1OXEndTxAMbvC3t7ckBvq3t1KjgA+PXoJhWCgTBdg2ULQs6JqNPbvrOEMRfX2Xr42N/d2RTF5Nk/XrWxyhYN2Zk1+/Gal6SOTpChg+PYmRkVmUlwtgjPFkNnw+AYcOrIIsMywoOt7quRqfur0YJeseb+38PBYd3vpKI0xDhdNpYSmXx7GBW8jni3A4AF1neHuPhGefE0A1HWK5hZELOezdP9lFoju2DZ480dktSYBlamDEhOgu4oeRuxg8vQTOHi3NwN53+GPKa8IonC4KnW937Z4fIvt6t858ejzsA1yc/ooER0kG5RGjY3nMZ0y0byuito7y8xXoHFmORRw8IMySjz96SauvF6V0WkdNjZtrdaNSLoNcQfDZF05eZhu97y4hq+SRzS0jdSePmell+GuXoczJOuk/0qbd/NOWfrpMUS7ZXLNVor3xaQsTkwTMtrD2MRM//8IdYRZMk0HNE7Q1Gwi3Cjo5fPCpmQIVfefOF+GpYPyBzYtmc+8tHDuqcBttfNBXhYUFLlC0S/eLKsOOzQaqq6VZEo08MRgMOru/SwhwuXgA77wsl/h6p4r+AQUwCd5/rxInzrohezg1bqtGGbraKOby8hAJBJ7sPLRfGz77vQfTM47Sj3WrKeLfZOAts8BNQZb//uquKqQyjpKtq70Wejbb+ORCdRepD6xzPNpQPNO1vRCJfVkFVbVw6ngGL24yUFAcPAGByGvz46iIyJFKeCSGw+0FfPu7Jz4174qWWtlX2+jf9IyReDlMW50M6HlDhakIK5ZzCYBQ5BCAr065YRsE47elaxdviR2zqYn0/WFaVRMKNK6hsX07lyMvNFE88jBbaQcOHkIJMncILt5wITbqif+luHqV6WTqgWm8t2Tv2u6WhmJHqMHaEvBaMnjdUguCmvxHGL+ecSbUu1MPjPO/a++MwCIfZKMAAAAASUVORK5CYII=\"}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/8",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "baf5facb-16d5-4be4-a5b4-9cd92ab998a5",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "13442a47-a5a7-4869-a43f-14db4112804a",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminUpdatesNonValidOrder",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57ed3829-46f9-47ac-bca1-4591039556d9",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "36d8ce7b-01ff-4046-87c2-1f53731b7a13",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminUpdatesUnownedOrder",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "UpdateUnownedOrder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d4edb2da-79b4-4ef4-a6e6-5778586b7520",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"",
													"pm.test(\"Order belongs to testuser\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.userName).to.eql(\"TestUser\");",
													"    pm.expect(jsonData.userEmail).to.eql(\"testuser@himzo.hu\");",
													"});",
													"",
													"pm.test(\"Sent attributes are not updated\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.orderId).to.eql(3);",
													"    pm.expect(jsonData.amount).to.not.eql(200);",
													"    pm.expect(jsonData.amount).to.eql(1);",
													"    pm.expect(jsonData.size).to.not.eql(\"10x10mm\");",
													"    pm.expect(jsonData.size).to.eql(\"20x30mm\");",
													"});",
													"",
													"pm.test(\"Unsent attributes are the same\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.type).to.eql(2);",
													"    pm.expect(jsonData.fonts).to.eql(\"Lato\");",
													"    pm.expect(jsonData.patternPlace).to.eql(\"Váll felett\");",
													"    pm.expect(jsonData.orderComment).to.eql(\"Legyen látható helyen\");",
													"    pm.expect(jsonData.commentContent).to.eql(\"A képen szereplő minta túl nagy a megadott mérethez képest!\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/Amount\", \"value\": 200 },\r\n\t{ \"op\": \"replace\", \"path\": \"/Size\",    \"value\":  \"10x10mm\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/2",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "c433db6e-e571-4014-a124-0e114c2f6d0c",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "a71ce795-749d-4569-af44-fd04a9500460",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "AdminUpdatesComment",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "UpdateComment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a97894f5-7395-4c54-b035-814b84bcafe4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Comment values is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    var today = new Date();",
													"    var commentUpdateTime = new Date(jsonData.commentUpdateTime);",
													"    pm.expect(commentUpdateTime.getDay()).to.eql(today.getDay());",
													"    pm.expect(jsonData.commentContent).to.eql(\"A rendelésed íme kész.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"A rendelésed íme kész.\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ResetCommentUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a97894f5-7395-4c54-b035-814b84bcafe4",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Comment values is of expected values\", function () {",
													"    var jsonData = pm.response.json();",
													"    var today = new Date();",
													"    var commentUpdateTime = new Date(jsonData.commentUpdateTime);",
													"    pm.expect(commentUpdateTime.getDay()).to.eql(today.getDay());",
													"    pm.expect(jsonData.commentContent).to.eql(\"-\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentUpdateTime\", \"value\": \"2019-11-08\" },\r\n\t{ \"op\": \"replace\", \"path\": \"/CommentContent\",    \"value\":  \"-\"}\r\n ]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Orders/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "7d7dce16-8583-47af-b59a-5bad3dd8ff75",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "791f3206-fed7-46d0-9947-b9620f279c50",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"description": "These are workflows that are connected to orders.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contents",
			"item": [
				{
					"name": "Unregistered",
					"item": [
						{
							"name": "Accessable",
							"item": [
								{
									"name": "Header",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "605d8b86-941a-49ae-af4b-cf46d87237a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Footer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efbcbbeb-60a3-4864-8d2e-4452a590e81e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=footer",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "footer"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6129b359-e8d6-4281-aa10-5e40f4d59773",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "084f0890-3fc1-4c75-b6d8-abfee60b21e7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48f73cb7-a609-4542-af4c-39b703137831",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e12ab7e2-f8d0-4d8c-8e42-aec52341e29a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=registration",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "registration"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3bf7367-f8aa-4009-bb2d-9aef8add35a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=signin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "signin"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Unaccessable",
							"item": [
								{
									"name": "Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83c8b5b6-b503-4a7d-a9c4-2e60287b461e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=profile",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "profile"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patchform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a941e969-cef5-4f70-bc4d-a4aeb3df1469",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patchform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patchform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patternform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "060acbb2-9ef7-43c5-8911-0aaa8f031264",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patternform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patternform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Userorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b7c1c3-05c6-4e42-be52-ff9bb5f2681f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=userorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "userorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e635a8a-dba4-48b2-8f02-db3dbe821dd8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_member",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_member"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Allorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "900ec40a-e8e2-4999-b559-49bde56e32ec",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=allorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "allorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65703377-d574-4745-8731-af388c494419",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=members",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "members"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4192235-02e8-4f62-bc32-2c0fc0517765",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "caedaa0a-eb19-4e9b-96bb-efb85743ace5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0458fcc-1a42-4576-8ae0-49ca3e64311d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae46a131-210f-4445-9fc4-ca82cca2a1da",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus_admin"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "UnregPatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db6dd151-49b5-4245-89d8-3891e9085bdd",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Error updating content because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/contentString\", \"value\": \"asdasdaasda\" },\n\t{ \"op\": \"replace\", \"path\": \"/title\", \"value\": \"Test title\" }\n]\n\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Contents/18",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents",
												"18"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Accessable",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "Header",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "605d8b86-941a-49ae-af4b-cf46d87237a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Footer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efbcbbeb-60a3-4864-8d2e-4452a590e81e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=footer",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "footer"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6129b359-e8d6-4281-aa10-5e40f4d59773",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "084f0890-3fc1-4c75-b6d8-abfee60b21e7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48f73cb7-a609-4542-af4c-39b703137831",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e12ab7e2-f8d0-4d8c-8e42-aec52341e29a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=registration",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "registration"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3bf7367-f8aa-4009-bb2d-9aef8add35a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=signin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "signin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83c8b5b6-b503-4a7d-a9c4-2e60287b461e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=profile",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "profile"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patchform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a941e969-cef5-4f70-bc4d-a4aeb3df1469",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patchform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patchform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patternform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "060acbb2-9ef7-43c5-8911-0aaa8f031264",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patternform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patternform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Userorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b7c1c3-05c6-4e42-be52-ff9bb5f2681f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=userorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "userorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Unaccessable",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "Header_member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e635a8a-dba4-48b2-8f02-db3dbe821dd8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_member",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_member"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Allorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "900ec40a-e8e2-4999-b559-49bde56e32ec",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=allorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "allorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65703377-d574-4745-8731-af388c494419",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=members",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "members"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4192235-02e8-4f62-bc32-2c0fc0517765",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "caedaa0a-eb19-4e9b-96bb-efb85743ace5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0458fcc-1a42-4576-8ae0-49ca3e64311d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae46a131-210f-4445-9fc4-ca82cca2a1da",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "UserPatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db6dd151-49b5-4245-89d8-3891e9085bdd",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Error updating content because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/contentString\", \"value\": \"asdasdaasda\" },\n\t{ \"op\": \"replace\", \"path\": \"/title\", \"value\": \"Test title\" }\n]\n\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Contents/18",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents",
												"18"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Member",
					"item": [
						{
							"name": "Accessable",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "Header",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "605d8b86-941a-49ae-af4b-cf46d87237a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Footer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efbcbbeb-60a3-4864-8d2e-4452a590e81e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=footer",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "footer"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6129b359-e8d6-4281-aa10-5e40f4d59773",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "084f0890-3fc1-4c75-b6d8-abfee60b21e7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48f73cb7-a609-4542-af4c-39b703137831",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e12ab7e2-f8d0-4d8c-8e42-aec52341e29a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=registration",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "registration"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3bf7367-f8aa-4009-bb2d-9aef8add35a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=signin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "signin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83c8b5b6-b503-4a7d-a9c4-2e60287b461e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=profile",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "profile"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patchform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a941e969-cef5-4f70-bc4d-a4aeb3df1469",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patchform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patchform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patternform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "060acbb2-9ef7-43c5-8911-0aaa8f031264",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patternform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patternform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Userorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b7c1c3-05c6-4e42-be52-ff9bb5f2681f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=userorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "userorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e635a8a-dba4-48b2-8f02-db3dbe821dd8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_member",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_member"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Allorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "900ec40a-e8e2-4999-b559-49bde56e32ec",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=allorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "allorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Unaccessable",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "Members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65703377-d574-4745-8731-af388c494419",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=members",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "members"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4192235-02e8-4f62-bc32-2c0fc0517765",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"   pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "caedaa0a-eb19-4e9b-96bb-efb85743ace5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0458fcc-1a42-4576-8ae0-49ca3e64311d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae46a131-210f-4445-9fc4-ca82cca2a1da",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is empty\", function () {",
													"    pm.expect(pm.response.text().length).to.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "UserPatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db6dd151-49b5-4245-89d8-3891e9085bdd",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Body is correct\", function () {",
													"    pm.response.to.have.body(\"Error updating content because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/contentString\", \"value\": \"asdasdaasda\" },\n\t{ \"op\": \"replace\", \"path\": \"/title\", \"value\": \"Test title\" }\n]\n\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Contents/18",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents",
												"18"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin",
					"item": [
						{
							"name": "Accessable",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "Header",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "605d8b86-941a-49ae-af4b-cf46d87237a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Footer",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "efbcbbeb-60a3-4864-8d2e-4452a590e81e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=footer",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "footer"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6129b359-e8d6-4281-aa10-5e40f4d59773",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "084f0890-3fc1-4c75-b6d8-abfee60b21e7",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "48f73cb7-a609-4542-af4c-39b703137831",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Registration",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e12ab7e2-f8d0-4d8c-8e42-aec52341e29a",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=registration",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "registration"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "SignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e3bf7367-f8aa-4009-bb2d-9aef8add35a8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=signin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "signin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "83c8b5b6-b503-4a7d-a9c4-2e60287b461e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=profile",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "profile"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patchform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a941e969-cef5-4f70-bc4d-a4aeb3df1469",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patchform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patchform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Patternform",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "060acbb2-9ef7-43c5-8911-0aaa8f031264",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=patternform",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "patternform"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Userorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c6b7c1c3-05c6-4e42-be52-ff9bb5f2681f",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=userorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "userorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "5e635a8a-dba4-48b2-8f02-db3dbe821dd8",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_member",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_member"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Allorder",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "900ec40a-e8e2-4999-b559-49bde56e32ec",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=allorder",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "allorder"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "65703377-d574-4745-8731-af388c494419",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=members",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "members"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Header_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a4192235-02e8-4f62-bc32-2c0fc0517765",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=header_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "header_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Title_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "caedaa0a-eb19-4e9b-96bb-efb85743ace5",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=title_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "title_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Welcome_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c0458fcc-1a42-4576-8ae0-49ca3e64311d",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=welcome_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Aboutus_admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ae46a131-210f-4445-9fc4-ca82cca2a1da",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Contents?path=aboutus_admin",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus_admin"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "AdminPatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "db6dd151-49b5-4245-89d8-3891e9085bdd",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Patch values are correct\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.contentId).to.eql(18);",
													"    pm.expect(jsonData.title).to.eql(\"Test title\");",
													"    pm.expect(jsonData.contentString).to.eql(\"asdasdaasda\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/contentString\", \"value\": \"asdasdaasda\" },\n\t{ \"op\": \"replace\", \"path\": \"/title\", \"value\": \"Test title\" }\n]\n\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Contents/18",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents",
												"18"
											]
										}
									},
									"response": []
								},
								{
									"name": "PatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/contentString\", \"value\": \"balblablabla\" },\n\t{ \"op\": \"replace\", \"path\": \"/title\", \"value\": \"Amivel foglalkozunk\" }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Contents/18",
											"host": [
												"{{url}}"
											],
											"path": [
												"Contents",
												"18"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "Unregistered",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "ImageWelcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a4daeab-d21e-431c-bf72-12fd3713241e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=welcome&type=0",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												},
												{
													"key": "type",
													"value": "0"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "ImageAboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a31867d2-4835-4e7f-8e1d-9b84181229a9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "ImagePatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0b765bc-745e-4938-a098-c3dc8c1f94db",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Patching is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error updating image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/active\", \"value\": true }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "ImagePost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e960bc3-3751-4107-aad9-74a85b64c2bf",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Post is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error posting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"path\": \"welcome\",\r\n    \"type\": 0,\r\n    \"active\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "ImageDelete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ab97fd9-99a7-4ce1-8ce7-cf9cc75bf53e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Delete is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error deleting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "User",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "ImageWelcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a4daeab-d21e-431c-bf72-12fd3713241e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "ImageAboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a31867d2-4835-4e7f-8e1d-9b84181229a9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "ImagePatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0b765bc-745e-4938-a098-c3dc8c1f94db",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Patching is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error updating image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/active\", \"value\": true }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "ImagePost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e960bc3-3751-4107-aad9-74a85b64c2bf",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Post is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error posting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"path\": \"welcome\",\r\n    \"type\": 0,\r\n    \"active\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "UserSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"testuser@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"testuser@himzo.hu\",\n\t\"Password\": \"$TestUser123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A user signs in."
									},
									"response": []
								},
								{
									"name": "ImageDelete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ab97fd9-99a7-4ce1-8ce7-cf9cc75bf53e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Delete is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error deleting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Member",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "ImageWelcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a4daeab-d21e-431c-bf72-12fd3713241e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "ImageAboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a31867d2-4835-4e7f-8e1d-9b84181229a9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "ImagePatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0b765bc-745e-4938-a098-c3dc8c1f94db",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Patching is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error updating image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/active\", \"value\": true }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "ImagePost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e960bc3-3751-4107-aad9-74a85b64c2bf",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Post is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error posting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"path\": \"welcome\",\r\n    \"type\": 0,\r\n    \"active\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "MemberSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"kortag@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"kortag@himzo.hu\",\n\t\"Password\": \"#Kortag123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "A member signs in."
									},
									"response": []
								},
								{
									"name": "ImageDelete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1ab97fd9-99a7-4ce1-8ce7-cf9cc75bf53e",
												"exec": [
													"pm.test(\"Status code is 401\", function () {",
													"    pm.response.to.have.status(401);",
													"});",
													"pm.test(\"Delete is unathrorized\", function () {",
													"    pm.expect(pm.response.text()).to.include(\"Error deleting image because of incorrect authority level.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Admin",
					"item": [
						{
							"name": "Get",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "ImageWelcome",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a4daeab-d21e-431c-bf72-12fd3713241e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=welcome",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "welcome"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "ImageAboutus",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a31867d2-4835-4e7f-8e1d-9b84181229a9",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Content list is not empty\", function () {",
													"    var data = pm.response.json();",
													"    pm.expect(data.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{url}}/Images?path=aboutus",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											],
											"query": [
												{
													"key": "path",
													"value": "aboutus"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Patch",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "ImagePatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b0b765bc-745e-4938-a098-c3dc8c1f94db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"There was a response\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.imageId).to.eql(1);",
													"    pm.expect(jsonData.length).to.not.eql(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/active\", \"value\": false }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ImagePatchReset",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n\t{ \"op\": \"replace\", \"path\": \"/active\", \"value\": true }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images/1",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Post",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "ImagePost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e960bc3-3751-4107-aad9-74a85b64c2bf",
												"exec": [
													"pm.test(\"Status code is 201\", function () {",
													"    pm.response.to.have.status(201);",
													"});",
													"pm.test(\"Post is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.environment.set(\"imageId\", jsonData.imageId);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"path\": \"welcome\",\r\n    \"type\": 0,\r\n    \"active\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											]
										}
									},
									"response": []
								},
								{
									"name": "ResetPost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b4fc1aa-bd2e-437d-abca-2cd8711e9211",
												"exec": [
													"pm.environment.unset(\"imageId\");"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Images/{{imageId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"{{imageId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "AdminSignIn",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "50752c70-41e6-4297-a274-566cf373503e",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Email check\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.email).to.eql(\"admin@himzo.hu\");",
													"});",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Email\": \"admin@himzo.hu\",\n\t\"Password\": \"$Administrator123\",\n\t\"KeepMeSignedIn\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Auth/Login",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Login"
											]
										},
										"description": "An admin signs in."
									},
									"response": []
								},
								{
									"name": "ImagePost",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4e960bc3-3751-4107-aad9-74a85b64c2bf",
												"exec": [
													"var jsonData = pm.response.json();",
													"pm.environment.set(\"imageId\", jsonData.imageId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"path\": \"welcome\",\r\n    \"type\": 0,\r\n    \"active\": false\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{url}}/Images",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images"
											]
										}
									},
									"response": []
								},
								{
									"name": "ImageDelete",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b4fc1aa-bd2e-437d-abca-2cd8711e9211",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Delete is successful\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.imageId).to.eql(pm.environment.get(\"imageId\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{url}}/Images/{{imageId}}",
											"host": [
												"{{url}}"
											],
											"path": [
												"Images",
												"{{imageId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Logout",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "486d2b57-d436-4092-88a0-ddfa4f0800db",
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Success\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.success).to.eql(true);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{url}}/Auth/Logout",
											"host": [
												"{{url}}"
											],
											"path": [
												"Auth",
												"Logout"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "57663ec3-23bc-4a07-8858-755a66016fe4",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fddcc250-62c6-492d-818c-cc4e22e2c189",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e3b78763-d073-4cc7-8a69-cf8e5cf7b641",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5402f805-69c0-426d-9997-f4cacea7f23b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}